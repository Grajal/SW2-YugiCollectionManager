name: YugiCollectionManager CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  railway-check:
    name: Backend Check (Railway-Compatible)
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: prueba_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      PGHOST: localhost
      PGPORT: 5432
      PGUSER: test
      PGPASSWORD: test
      PGDATABASE: prueba_test
      # Add other required env vars here (JWT_SECRET, AWS creds, etc.)

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          check-latest: true

      - name: Install dependencies
        run: go mod download
        working-directory: backend

      - name: Wait for Postgres
        run: |
          until pg_isready -h localhost -p 5432; do
            echo "Waiting for database..."
            sleep 2
          done

      - name: Run unit and integration tests
        run: go test -v ./...
        working-directory: backend

      - name: Build backend
        run: go build -v ./...
        working-directory: backend

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest
          args: --timeout=5m
          working-directory: backend

      - name: Run go fmt
        run: go fmt ./...
        working-directory: backend

  frontend-check:
    name: Frontend Check
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: frontend

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Lint code
        run: npm run lint

      - name: Run frontend tests
        run: npm run test -- --watchAll=false

      - name: Build frontend
        run: npm run build